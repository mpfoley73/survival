# Kaplan-Meier {#sec-km}

```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(survival)
library(survminer)
library(gtsummary)
library(gt)
library(scales)
library(glue)
library(ggiraph)
```

Kaplan-Meier (KM) is an estimator of the survivor function, $S(t)$, the probability of surviving beyond time *t*. KM is defined as the sum-product of the conditional probabilities of surviving to the next failure time, i.e., the cumulative survival probability.

$$\hat{S}(t) = \prod_{i: t_i < t}{\frac{n_i - d_i}{n_i}}$$ {#eq-s}

In @eq-s, $n_i$ is the number of subjects at risk at time $t_i$ and $d_i$ is the number incurring the event. The KM curve falls only when an event occurs, not when a subject is censored. Confidence limits are calculated using the "delta" method to obtain the variance of $\log \hat{S}(t)$.[^delta-method] 

[^delta-method]: The delta method approximates the variance of a function of an estimator using a Taylor expansion.

After a KM analysis, a log-rank test is often used to test for differences among curves. KM is ideal for comparing survival between groups defined with a single categorical variable because it makes no assumptions about the underlying hazard function. Multivariate analyses require parametric and semi-parametric models that estimate the hazard function, $h(t)$, the instantaneous event rate at *t* given survival up to *t* [@Clark2003a]. Even there, KM is a useful exploratory step because it shows the actual survival probabilities. 

The KM method is demonstrated here with a case study using the `survival::lung` dataset. The study investigated differences in all-cause mortality between men and women diagnosed with advanced lung cancer. 227 participants aged 39 to 82 were monitored up to three years until time of death. The participants were segmented into three groups according to their ECOG performance score: *Asymptomatic*, symptomatic but completely *Ambulatory*, and *Bedridden*. The dataset includes participant age and gender (not used in this analysis). @tbl-02-smry-stats presents the summary statistics.

```{r tbl-02-smry-stats}
#| code-fold: true

d_lung <-
  survival::lung |>
  filter(!is.na(ph.ecog)) |>
  mutate(
    status = factor(
      status,
      levels = c(1, 2),
      labels = c("censored", "died")
    ),
    ph.ecog = factor(
      ph.ecog,
      levels = c(0, 1, 2, 3, 4),
      labels = c(
        "Asymptomatic",
        "Ambulatory",
        "In bed <50%",
        "In bed >50%",
        "Bedridden"
      )
    ),
    ph.ecog = fct_drop(ph.ecog),
    ph.ecog = fct_lump_n(ph.ecog, n = 2, other_level = "Bedridden"),
    sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
    age_bin = cut(age, breaks = c(38, 55, 65, 83)),
    patient_id = row_number()
  )

t1 <- d_lung |>
  tbl_summary(by = "ph.ecog", include = c(time, status, ph.ecog, age, sex)) |>
  add_overall()

as_gt(t1) |>
  gt::tab_caption("d_lung summary statistics")
```

## Assumptions

KM analyses model processes that have a binary outcome, a precise event time, minimal left censoring (unknown starting times), and censoring that is independent of the event.[^uninformative-censoring]

[^uninformative-censoring]: With **uninformative censoring**, censoring causes are independent of the event. Subjects do not drop out of the study because of something related to their group. E.g., a subject does not drop out of a therapy study because the therapy is making their condition worse.

Two assumptions underlie the KM procedure:

-   **No Cohort Effects**. If starting times are staggered and encompass the introduction of new therapies, survival will vary. Test for cohort effects by running KM tests for multiple time intervals. (Only test for cohort affects if there is reason to believe they exist.)
-   **Similar Censorship Patterns**. The amount and pattern of censoring should be similar. Censorship patterns can be tested by inspection.

The participant censoring plot shows censored cases were equally spread over time and not too dissimilar for the *Asymptomatic* and *Ambulatory* groups, but the *Bedridden* group had only a few censoring events (@fig-02-censoring).

[^02-km-1]: Use `gtsummary::inline_text()` to summarize (e.g., `gtsummary::inline_text(t1, variable = status, level = "censored", column = "Asymptomatic")`.

```{r fig-02-censoring}
#| fig-cap: "Censored cases were equally spread over time"
#| code-fold: true

d_lung |>
  filter(status == "censored") |>
  ggplot(aes(x = time, y = fct_rev(ph.ecog))) +
  geom_point() +
  theme_light() +
  labs(title = "Participant Censoring", x = "Time (days)", y = NULL)
```

From this, conclude that censored cases were negatively associated with symptom severity, *Asymptomatic*, `r gtsummary::inline_text(t1, variable = status, level = "censored", column = "Asymptomatic")`, *Ambulatory*, `r gtsummary::inline_text(t1, variable = status, level = "censored", column = "Ambulatory")`, and *Bedridden*, `r gtsummary::inline_text(t1, variable = status, level = "censored", column = "Bedridden")` study groups.[^02-km-1]

## Fitting the Model

Calculate $\hat{S}(t)$ with `survival::survfit()`. `survfit()` operates on a `Surv` object, created by `survival::Surv()`. Explanatory variables can be defined as factors, but the event indicator, `status`, must be numeric or boolean, coded as 0\|1, 1\|2, or FALSE|TRUE.[^02-km-2] If the confidence interval crosses zero, specify the log-log transformation parameter `conf.type = "log-log"` (this one doesn't need it).

[^02-km-2]: See neat discussion in Note section of `Surv()` help file.

```{r}
(km_fit <- survfit(Surv(time, status == "died") ~ ph.ecog, data = d_lung))
```

```{r}
#| include: false
km_smry <- summary(km_fit)
km_smry$table
```

`r km_smry$table["ph.ecog=Asymptomatic", "events"]` of the `r km_smry$table["ph.ecog=Asymptomatic", "records"]` Asymptomatic subjects died, `r km_smry$table["ph.ecog=Ambulatory", "events"]` of the `r km_smry$table["ph.ecog=Ambulatory", "records"]` Ambulatory subjects died, and `r km_smry$table["ph.ecog=Bedridden", "events"]` of the `r km_smry$table["ph.ecog=Bedridden", "records"]` Bedridden subjects died. `gtsummary::tbl_survfit()` presents a similar summary in a formatted table. @tbl-02-survfit additionally presents the effects of sex and age.

```{r tbl-02-survfit}
#| tbl-cap: "Kaplan-Meier model fit."

(km_gt <- gtsummary::tbl_survfit(
  list(
    survfit(Surv(time, status == "died") ~ 1, data = d_lung),
    survfit(Surv(time, status == "died") ~ ph.ecog, data = d_lung),
    survfit(Surv(time, status == "died") ~ sex, data = d_lung),
    survfit(Surv(time, status == "died") ~ age_bin, data = d_lung)
  ),
  probs = 0.5,
  label_header = "**Median Survival**"
))
```

<br>

Values are median with 95% CI. Lower levels of ECOG appear to have a protective effect. Asymptomatic participants had a median survival time of `r inline_text(km_gt, "ph.ecog", level = "Asymptomatic", column = stat_1)` days. This was longer than the Ambulatory group, `r inline_text(km_gt, "ph.ecog", level = "Ambulatory", column = stat_1)` days, and Bedridden group, `r inline_text(km_gt, "ph.ecog", level = "Bedridden", column = stat_1)` days.

Extract values for reporting with `gtsummary::inline_text()`, or create a summary object. The `table` attribute of the summary object is a named numeric matrix. E.g., get Asymptomatic events with `km_smry$table["ph.ecog=Asymptomatic", "events"]`.

```{r collapse=TRUE}
km_smry <- summary(km_fit)

# Example: Asymptomatic median survival time.
km_smry$table["ph.ecog=Asymptomatic", "median"]
```

You can also use `summary()` with the `time` parameter to estimate survival up until a point in time.

```{r}
summary(km_fit, time = 500)
```

`gtsummary::tbl_survfit()` does something similar.

```{r}
gtsummary::tbl_survfit(km_fit, times = 500)
```

`broom::tidy()` summarizes the data by each event time. At time *t* = 5, 1 of the 63 Asymptomatic ECOG at risk died, so $S(5) = 1 - \frac{1}{63} = .9841$. At *t* = 11, 1 of the 62 that remained died, so $S(11) = S(5) \cdot \frac{1}{62} = .9841 \cdot .9839 = .9683$, and so on. This is the support for the survival curves.

```{r}
broom::tidy(km_fit)
```

The KM plot in @fig-02-survcurv gives you a better feel for the data. Vertical drops indicate events and vertical ticks indicate censoring. Cumulative survival is negatively associated with the ECOG performance score. There is no substantial crossing of the survival curves that would affect the power of the statistical tests. The curves are similarly shaped.

::: {.callout-note}
**survminer** does a good job plotting KM models and includes a risk table, but **ggplot** allows you to control more of the output. @fig-02-survcurv2 combines **ggplot** with **giraph** for a full risk table in the tooltips.
:::

::: panel-tabset

### survminer

```{r fig-02-survcurv}
#| fig-cap: "Kaplan-Meier survival curve."
#| fig-height: 7
#| fig-width: 6.5
#| code-fold: true

ggsurvplot(
  km_fit,
  data = d_lung,
  fun = "pct",
  risk.table = TRUE,
  fontsize = 3, # used in risk table
  surv.median.line = "hv", # median horizontal and vertical ref lines
  palette = my_palette$warm,
  title = "Kaplan-Meier Survival Function Estimate",
  legend.title = "ECOG",
  legend.labs = levels(d_lung$ph.ecog)
)
```

### ggplot

```{r fig-02-survcurv2}
#| fig-cap: "Kaplan-Meier survival curve using ggplot."
#| code-fold: true

med <-
  broom::tidy(km_fit) |>
  filter(estimate < .5) |>
  slice_max(estimate, by = strata) |>
  mutate(strata = str_remove(strata, "ph.ecog="))
p <-
  broom::tidy(km_fit) |>
  mutate(
    strata = str_remove(strata, "ph.ecog="),
    tt = glue("{strata}\n\nTime: {time}\nAt risk: {n.risk}\nEst.: ",
              "{percent(estimate, .1)}")
  ) |>
  ggplot(aes(x = time, y = estimate, color = strata)) +
  geom_step() +
  geom_segment(
    data = med,
    aes(x = 0, xend = time, y = .5, yend = .5),
    linetype = 2
  ) +
  geom_segment(
    data = med,
    aes(x = time, xend = time, y = 0, yend = .5),
    linetype = 2
  ) +
  geom_point_interactive(aes(tooltip = tt)) +
  scale_color_manual(values = my_palette$warm) +
  scale_y_continuous(labels = percent_format(1)) +
  labs(
    x = "time (days)", y = "Survival probability", color = NULL,
    title = "Kaplan-Meier Survival Function Estimate"
  )
girafe(ggobj = p)
```
:::

`ggsurvplot()` can also plot the cumulative risk function, $F(t) = 1 - S(t)$, with parameter `fun = "event"` (@fig-02-cumrisk), and the cumulative hazard function, $H(t) = -\log S(t)$, with parameter `fun = "cumhaz"` (@fig-02-cumhaz).

<!-- The colons (::::, :::) create a style html within document -->

::::: {style="display: grid; grid-template-columns: 1fr 1fr; grid-column-gap: 10px;"}
<div>

```{r fig-02-cumrisk}
#| code-fold: true
#| fig-cap: "Cumulative risk curve."

ggsurvplot(
  km_fit,
  data = d_lung,
  fun = "event",
  linetype = "strata",
  pval = FALSE,
  conf.int = FALSE,
  palette = my_palette$warm
)
```

</div>

<div>

```{r fig-02-cumhaz}
#| code-fold: true
#| fig-cap: "Cumulative hazard curve."

ggsurvplot(
  km_fit,
  data = d_lung,
  fun = "cumhaz",
  linetype = "strata", # Change line type by groups
  pval = FALSE,
  conf.int = FALSE,
  palette = my_palette$warm
)
```

</div>
:::::

## Interpreting Results

Determine whether there are significant differences in the fitted survival distributions using a [log-rank test](#logrank) (and/or Breslow and Tarone-Ware test). If there are differences, run a pairwise comparison post-hoc test to determine which curves differ.

The log-rank test weights the difference at each time point equally. Compared to Breslow and Tarone-Ware, it places greater emphasis on differences at later rather than earlier time points. The Breslow test (aka generalized Wilcoxon or Gehan) weights the differences by the number at risk at each time point. The effect is to place greater weight on the differences at earlier time points. The Tarone-Ware test weights differences the same way as Breslow, but takes the square root of the number at risk.

::: panel-tabset

### Log-rank

```{r}
(km_diff <- survdiff(
  Surv(time, status == "died") ~ ph.ecog, 
  data = d_lung
))
```

The survival distributions for the three interventions were statistically significantly different, $\chi^2$(2) = `r km_diff$chisq %>% number(.1)`, *p* \< .001.

### Breslow

```{r}
coin::logrank_test(
  Surv(time, status == "died") ~ ph.ecog,
  data = d_lung,
  type = "Gehan-Breslow"
)
```

### Tarone-Ware

```{r}
coin::logrank_test(
  Surv(time, status == "died") ~ ph.ecog,
  data = d_lung,
  type = "Tarone-Ware"
)

```

:::

The three tests produced identical conclusions. The log rank test is an omnibus test. Create a pairwise comparisons table to see which groups differed.

```{r}
(km_pairwise <- survminer::pairwise_survdiff(
  Surv(time, status == "died") ~ ph.ecog,
  data = d_lung
))
```

Adjust the statistical significance to compensate for making multiple comparisons with a Bonferroni correction. There are three comparisons so divide .05 by 3, so the significance threshold is *p* \< .0167. There was a statistically significant difference in survival distributions for Asymptomatic vs Bedridden, *p* \< .001, and Ambulatory vs Bedridden, *p* = `r km_pairwise$p.value["Bedridden", "Ambulatory"] %>% number(.001)`, but not for Asymptomatic vs Ambulatory, *p* = `r km_pairwise$p.value["Ambulatory", "Asymptomatic"] %>% number(.001)`.

## Reporting

The guidelines for reporting the Kaplan-Meier test are from Laerd's Kaplan-Meier using SPSS Statistics [@Laerd2015]. Report the results like this.

> `r nrow(d_lung) %>% comma(1)` Men and women diagnosed with advanced lung cancer aged `r min(d_lung$age)` to `r max(d_lung$age)` were monitored up to three years until time of death. Participants were classified into three groups according to their ECOG performance score: *asymptomatic* (n = `r d_lung %>% count(ph.ecog) %>% filter(ph.ecog == "Asymptomatic") %>% pull(n)`), *symptomatic but completely ambulatory* (n = `r d_lung %>% count(ph.ecog) %>% filter(ph.ecog == "Ambulatory") %>% pull(n)`), and *bedridden at least part of the day* (n = `r d_lung %>% count(ph.ecog) %>% filter(ph.ecog == "Bedridden") %>% pull(n)`). A Kaplan-Meier survival analysis (Kaplan & Meier, 1958) was conducted to compare survival times among the three ECOG performance scores. Censored cases were negatively associated with symptom severity, *asymptomatic*, `r gtsummary::inline_text(t1, variable = status, level = "censored", column = "Asymptomatic")`, *symptomatic but completely ambulatory*, `r gtsummary::inline_text(t1, variable = status, level = "censored", column = "Ambulatory")`, and *bedridden*, `r gtsummary::inline_text(t1, variable = status, level = "censored", column = "Bedridden")` study groups. Participants that were asymptomatic had a median survival time of `r inline_text(km_gt, "ph.ecog", level = "Asymptomatic", column = stat_1)` days. This was longer than the ambulatory group, `r inline_text(km_gt, "ph.ecog", level = "Ambulatory", column = stat_1)` days, and bedridden group, `r inline_text(km_gt, "ph.ecog", level = "Bedridden", column = stat_1)` days. A log rank test was run to determine if there were differences in the survival distribution for the different types of intervention. The survival distributions for the three interventions were statistically significantly different, $\chi^2$(2) = `r km_diff$chisq %>% number(.1)`, *p* \< .001. Pairwise log rank comparisons were conducted to determine which intervention groups had different survival distributions. A Bonferroni correction was made with statistical significance accepted at the *p* \< .017 level. There was a statistically significant difference in survival distributions for the asymptomatic vs bedridden, *p* \< .001, and ambulatory vs bedridden, *p* = `r km_pairwise$p.value["Bedridden", "Ambulatory"] %>% number(.001)`, groups. However, the survival distributions for the asymptomatic vs ambulatory group were not statistically significant, *p* = `r km_pairwise$p.value["Ambulatory", "Asymptomatic"] %>% number(.001)`
